#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞—Å—Ç–µ—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))

def test_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        from easybuild_bot.handlers import (
            EditProjectWizard,
            SELECT_PROJECT,
            SELECT_FIELD,
            EDIT_VALUE,
            EDIT_PROJECT_CONFIRM
        )
        print("‚úÖ –ò–º–ø–æ—Ä—Ç EditProjectWizard - OK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers: {e}")
        return False
    
    try:
        from easybuild_bot.storage import Storage
        print("‚úÖ –ò–º–ø–æ—Ä—Ç Storage - OK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Storage: {e}")
        return False
    
    try:
        from easybuild_bot.models import Project, ProjectType
        print("‚úÖ –ò–º–ø–æ—Ä—Ç models - OK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ models: {e}")
        return False
    
    return True


def test_wizard_creation():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    try:
        from easybuild_bot.handlers import EditProjectWizard
        from easybuild_bot.storage import Storage
        
        # –°–æ–∑–¥–∞—ë–º storage —Å —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î
        storage = Storage("/tmp/test_easybuild_edit.db")
        
        # –°–æ–∑–¥–∞—ë–º –º–∞—Å—Ç–µ—Ä
        wizard = EditProjectWizard(storage)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ EditProjectWizard - OK")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–æ–≤
        methods = ['start', 'show_project_list', 'select_project', 'show_field_menu', 
                   'select_field', 'receive_value', 'save_changes', 'cancel']
        
        for method in methods:
            if hasattr(wizard, method):
                print(f"  ‚úÖ –ú–µ—Ç–æ–¥ {method} - –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"  ‚ùå –ú–µ—Ç–æ–¥ {method} - –ù–ï –Ω–∞–π–¥–µ–Ω")
                return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


def test_states():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π...")
    
    try:
        from easybuild_bot.handlers import (
            SELECT_PROJECT,
            SELECT_FIELD,
            EDIT_VALUE,
            EDIT_PROJECT_CONFIRM
        )
        
        states = {
            'SELECT_PROJECT': SELECT_PROJECT,
            'SELECT_FIELD': SELECT_FIELD,
            'EDIT_VALUE': EDIT_VALUE,
            'EDIT_PROJECT_CONFIRM': EDIT_PROJECT_CONFIRM
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã
        values = list(states.values())
        if len(values) == len(set(values)):
            print("‚úÖ –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã")
        else:
            print("‚ùå –ï—Å—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π!")
            return False
        
        # –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è
        print("\n–ó–Ω–∞—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π:")
        for name, value in states.items():
            print(f"  {name} = {value}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π: {e}")
        return False


def test_format_functions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    try:
        from easybuild_bot.handlers.edit_project_wizard import escape_md, format_value
        from easybuild_bot.models import ProjectType
        
        # –¢–µ—Å—Ç escape_md
        result = escape_md("Test_string-with.special!")
        if "\\" in result:
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è escape_md —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –§—É–Ω–∫—Ü–∏—è escape_md –Ω–µ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–∏–º–≤–æ–ª—ã")
            return False
        
        # –¢–µ—Å—Ç format_value
        result = format_value("description", "Test description")
        if result == "Test description":
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è format_value —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —Å—Ç—Ä–æ–∫")
        else:
            print(f"‚ùå –§—É–Ω–∫—Ü–∏—è format_value –≤–µ—Ä–Ω—É–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {result}")
            return False
        
        # –¢–µ—Å—Ç format_value –¥–ª—è None
        result = format_value("description", None)
        if result == "_–Ω–µ –∑–∞–¥–∞–Ω–æ_":
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è format_value —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è None")
        else:
            print(f"‚ùå –§—É–Ω–∫—Ü–∏—è format_value –¥–ª—è None –≤–µ—Ä–Ω—É–ª–∞: {result}")
            return False
        
        # –¢–µ—Å—Ç format_value –¥–ª—è —Å–ø–∏—Å–∫–∞
        result = format_value("tags", ["tag1", "tag2"])
        if result == "tag1, tag2":
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è format_value —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–æ–≤")
        else:
            print(f"‚ùå –§—É–Ω–∫—Ü–∏—è format_value –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤–µ—Ä–Ω—É–ª–∞: {result}")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        import traceback
        traceback.print_exc()
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("=" * 60)
    print("üß™ –¢–µ—Å—Ç Edit Project Wizard")
    print("=" * 60)
    
    all_ok = True
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        all_ok = False
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞
    if not test_wizard_creation():
        all_ok = False
    
    # –¢–µ—Å—Ç 3: –°–æ—Å—Ç–æ—è–Ω–∏—è
    if not test_states():
        all_ok = False
    
    # –¢–µ—Å—Ç 4: –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    if not test_format_functions():
        all_ok = False
    
    print("\n" + "=" * 60)
    if all_ok:
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´")
        print("=" * 60)
        return 0
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò")
        print("=" * 60)
        return 1


if __name__ == "__main__":
    sys.exit(main())



